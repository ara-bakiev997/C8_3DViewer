#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "s21_calc.h"

#test test_invalid_input

  char *test_str = "*5";
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_int_eq(error, -1);

  test_str = "sincos(pi)";
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  ck_assert_int_eq(error, -1);

  test_str = "sin1(pi)";
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  ck_assert_int_eq(error, -1);

  test_str = "sin+(pi)";
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  ck_assert_int_eq(error, -1);

  test_str = "sin";
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  ck_assert_int_eq(error, -1);

  test_str = "*5";
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  ck_assert_int_eq(error, -1);

  test_str = "3*(*5)";
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  ck_assert_int_eq(error, -1);

  test_str = "1(-5)";
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  ck_assert_int_eq(error, -1);

  test_str = "(5)sin(pi)";
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  ck_assert_int_eq(error, -1);


#test test_calculation_error

  char *test_str = "atan(10)/0"; // 0
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_int_eq(error, 1);

  test_str = "cos(pi)/0"; // -1
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  ck_assert_int_eq(error, 1);


#test test1

  char *test_str = "5^2-2*8-3"; //6
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq(res, 6);
  ck_assert_int_eq(error, 0);

#test test2

  char *test_str = "123/cos(pi)+123.45"; // 0.45
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  double check = 0.45;
  ck_assert_double_eq_tol(res, check, 1E-7);
  ck_assert_int_eq(error, 0);

#test test3

  char *test_str = "sin cos tan acos asin atan sqrt ln log";
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_int_eq(error, -1);

#test test4

  char *test_str = "1+2*2+1*1+2^2+1/0";  // = ∞
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_int_eq(error, 1);

#test test5

  char *test_str = "2*(3+1)/3()";
    printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_int_eq(error, -1);

#test test6

  char *test_str = "(((-1)))";
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq(res, -1);
  ck_assert_int_eq(error, 0);

  #test test7

  char *test_str = "5/(-1)";
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq(res, -5);
  ck_assert_int_eq(error, 0);

  #test test8

  char *test_str = "1+2+3+(3+5)*2+3/(1-4)^3";  // = 21,8888888889
    printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  double check = 21.8888888889;
  ck_assert_double_eq_tol(res, check, 1E-7);
  ck_assert_int_eq(error, 0);

  #test test9

  char *test_str = "sin(3.14159265359)";  // = 0  !
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  double check = 0;
  ck_assert_double_eq_tol(res, check, 1E-7);
  ck_assert_int_eq(error, 0);


  #test test10

  // char *test_str = "1+2+3+(3+5)*2+3/(1-4)^3*(3^((2+1)+1))/(((-1)))+2";  // = 33  !
  char *test_str = "1+2+3+(3+5)*2+3/(1-4)^3*(3^((2+1)+1))/(((-1)))+2";
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq(res, 33);
  ck_assert_int_eq(error, 0);



  #test test11

  char *test_str = "2^2^3";  // 256
    printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq(res, 256);
  ck_assert_int_eq(error, 0);

  #test test12

  char *test_str = "3/3^3*81"; // 9
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq(res, 9);
  ck_assert_int_eq(error, 0);

  #test test13

  char *test_str = "0^0"; // 1
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq(res, 1);
  ck_assert_int_eq(error, 0);

  #test test14

  char *test_str = "-1^2"; // -1
    printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq(res, -1);
  ck_assert_int_eq(error, 0);

  #test test15

  char *test_str = "(-1)^(1/3)"; // error
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_int_eq(error, 13);

  #test test16

  char *test_str = "3/27*81";  // = 9 !
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq(res, 9);
  ck_assert_int_eq(error, 0);

  #test test17

  char *test_str = "cos(30)"; // 0.15425144988
  printf("input = %s\n", test_str);
    
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  double check = 0.15425144988;
  ck_assert_double_eq_tol(res, check, 1E-7);
  ck_assert_int_eq(error, 0);

  #test test18

  char *test_str = "1+(30)"; // 31
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq(res, 31);
  ck_assert_int_eq(error, 0);

#test test19_trigonometry

  char *test_str = "sin(pi)"; // 0
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  double check = 0;
  ck_assert_double_eq_tol(res, check, 1E-7);
  ck_assert_int_eq(error, 0);

  test_str = "cos(pi)"; // -1
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  check = -1;
  ck_assert_double_eq_tol(res, check, 1E-7);
  ck_assert_int_eq(error, 0);
  
  test_str = "tan(0.78539816339)"; // 1
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  check = 1;
  ck_assert_double_eq_tol(res, check, 1E-7);
  ck_assert_int_eq(error, 0);

  test_str = "asin(0.5)"; //
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq_tol(res, asin(0.5), 1E-7);
  ck_assert_int_eq(error, 0);

  test_str = "acos(0.5)"; //
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq_tol(res, acos(0.5), 1E-7);
  ck_assert_int_eq(error, 0);

  test_str = "atan(0.5)"; //
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq_tol(res, atan(0.5), 1E-7);
  ck_assert_int_eq(error, 0);

  test_str = "sqrt(4)"; //
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq_tol(res, sqrt(4), 1E-7);
  ck_assert_int_eq(error, 0);

  test_str = "ln(5)"; //
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq_tol(res, log(5), 1E-7);
  ck_assert_int_eq(error, 0);

  test_str = "log(5)"; //
  printf("input = %s\n", test_str);
  error = 0;
  res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq_tol(res, log10(5), 1E-7);
  ck_assert_int_eq(error, 0);

#test test20

  char *test_str = "234.34%6.34"; // 
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq_tol(res, fmod(234.34, 6.34), 1E-7);
  ck_assert_int_eq(error, 0);

#test test21

  char *test_str = "+3+(+3)"; // 
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  ck_assert_double_eq_tol(res, 6, 1E-7);
  ck_assert_int_eq(error, 0);

  #test test22

  char *test_str = "sin(pi/2)*2.231^3-acos(0.123)"; // 
  printf("input = %s\n", test_str);
  int error = 0;
  double res = 0;
  error = main_solution(test_str, &res);
  double check = sin(M_PI / 2) * pow(2.231, 3) - acos(0.123);
  ck_assert_double_eq_tol(res, check, 1E-7);
  ck_assert_int_eq(error, 0);